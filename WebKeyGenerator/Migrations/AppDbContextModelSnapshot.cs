// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebKeyGenerator.Context;

#nullable disable

namespace WebKeyGenerator.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WebKeyGenerator.Models.Buisness.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CrmId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("EmailMd5Hash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("WebKeyGenerator.Models.Buisness.Key", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Expired")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Keys");
                });

            modelBuilder.Entity("WebKeyGenerator.Models.Buisness.KeyHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Changed")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CrmTaskId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Expired")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("KeyId")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KeyId");

                    b.HasIndex("UserId");

                    b.ToTable("KeyHistories");
                });

            modelBuilder.Entity("WebKeyGenerator.Models.Buisness.Settings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("WebKeyGenerator.Models.Identity.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TokenHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TokenSalt")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Ts")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("WebKeyGenerator.Models.Identity.TgUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ChatId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TgUsers");
                });

            modelBuilder.Entity("WebKeyGenerator.Models.Identity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Email = "admin@admin.admin",
                            Login = "admin",
                            Password = "38ef/vWYE15AgcPSeUkYA3rXsVgnnGEtj0xWxq846bI=",
                            PasswordSalt = "7KmMVPksY91X8kfcxsceURd71psvDgJ24vsRw5aKrVA=",
                            Role = "admin"
                        });
                });

            modelBuilder.Entity("WebKeyGenerator.Models.Payment.Amount", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("currency")
                        .HasColumnType("longtext");

                    b.Property<string>("value")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Amount");
                });

            modelBuilder.Entity("WebKeyGenerator.Models.Payment.AuthorizationDetails", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("auth_code")
                        .HasColumnType("longtext");

                    b.Property<string>("rrn")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("AuthorizationDetails");
                });

            modelBuilder.Entity("WebKeyGenerator.Models.Payment.CancellationDetails", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("party")
                        .HasColumnType("longtext");

                    b.Property<string>("reason")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("CancellationDetails");
                });

            modelBuilder.Entity("WebKeyGenerator.Models.Payment.Card", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("card_type")
                        .HasColumnType("longtext");

                    b.Property<string>("expiry_month")
                        .HasColumnType("longtext");

                    b.Property<string>("expiry_year")
                        .HasColumnType("longtext");

                    b.Property<string>("first6")
                        .HasColumnType("longtext");

                    b.Property<string>("issuer_country")
                        .HasColumnType("longtext");

                    b.Property<string>("last4")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Card");
                });

            modelBuilder.Entity("WebKeyGenerator.Models.Payment.IncomeAmount", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("currency")
                        .HasColumnType("longtext");

                    b.Property<string>("value")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("IncomeAmount");
                });

            modelBuilder.Entity("WebKeyGenerator.Models.Payment.Metadata", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("cms_name")
                        .HasColumnType("longtext");

                    b.Property<string>("cps_email")
                        .HasColumnType("longtext");

                    b.Property<string>("cps_phone")
                        .HasColumnType("longtext");

                    b.Property<string>("custName")
                        .HasColumnType("longtext");

                    b.Property<string>("module_version")
                        .HasColumnType("longtext");

                    b.Property<string>("orderDetails")
                        .HasColumnType("longtext");

                    b.Property<string>("wp_user_id")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Metadata");
                });

            modelBuilder.Entity("WebKeyGenerator.Models.Payment.PaymentItem", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("amountid")
                        .HasColumnType("int");

                    b.Property<int?>("authorization_detailsid")
                        .HasColumnType("int");

                    b.Property<int?>("cancellation_detailsid")
                        .HasColumnType("int");

                    b.Property<DateTime?>("captured_at")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<bool>("emailSend")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("income_amountid")
                        .HasColumnType("int");

                    b.Property<int?>("metadataid")
                        .HasColumnType("int");

                    b.Property<bool?>("paid")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("payment_methodid")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("recipientid")
                        .HasColumnType("int");

                    b.Property<bool?>("refundable")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("refunded_amountid")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("longtext");

                    b.Property<bool?>("test")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("id");

                    b.HasIndex("amountid");

                    b.HasIndex("authorization_detailsid");

                    b.HasIndex("cancellation_detailsid");

                    b.HasIndex("income_amountid");

                    b.HasIndex("metadataid");

                    b.HasIndex("payment_methodid");

                    b.HasIndex("recipientid");

                    b.HasIndex("refunded_amountid");

                    b.ToTable("PaymentItems");
                });

            modelBuilder.Entity("WebKeyGenerator.Models.Payment.PaymentMethod", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("cardid")
                        .HasColumnType("int");

                    b.Property<bool?>("saved")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("title")
                        .HasColumnType("longtext");

                    b.Property<string>("type")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("cardid");

                    b.ToTable("PaymentMethod");
                });

            modelBuilder.Entity("WebKeyGenerator.Models.Payment.Recipient", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("account_id")
                        .HasColumnType("longtext");

                    b.Property<string>("gateway_id")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Recipient");
                });

            modelBuilder.Entity("WebKeyGenerator.Models.Payment.RefundedAmount", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("currency")
                        .HasColumnType("longtext");

                    b.Property<string>("value")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("RefundedAmount");
                });

            modelBuilder.Entity("WebKeyGenerator.Models.Buisness.Key", b =>
                {
                    b.HasOne("WebKeyGenerator.Models.Buisness.Client", null)
                        .WithMany("Keys")
                        .HasForeignKey("ClientId");
                });

            modelBuilder.Entity("WebKeyGenerator.Models.Buisness.KeyHistory", b =>
                {
                    b.HasOne("WebKeyGenerator.Models.Buisness.Key", "Key")
                        .WithMany()
                        .HasForeignKey("KeyId");

                    b.HasOne("WebKeyGenerator.Models.Identity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Key");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebKeyGenerator.Models.Identity.RefreshToken", b =>
                {
                    b.HasOne("WebKeyGenerator.Models.Identity.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebKeyGenerator.Models.Payment.PaymentItem", b =>
                {
                    b.HasOne("WebKeyGenerator.Models.Payment.Amount", "amount")
                        .WithMany()
                        .HasForeignKey("amountid");

                    b.HasOne("WebKeyGenerator.Models.Payment.AuthorizationDetails", "authorization_details")
                        .WithMany()
                        .HasForeignKey("authorization_detailsid");

                    b.HasOne("WebKeyGenerator.Models.Payment.CancellationDetails", "cancellation_details")
                        .WithMany()
                        .HasForeignKey("cancellation_detailsid");

                    b.HasOne("WebKeyGenerator.Models.Payment.IncomeAmount", "income_amount")
                        .WithMany()
                        .HasForeignKey("income_amountid");

                    b.HasOne("WebKeyGenerator.Models.Payment.Metadata", "metadata")
                        .WithMany()
                        .HasForeignKey("metadataid");

                    b.HasOne("WebKeyGenerator.Models.Payment.PaymentMethod", "payment_method")
                        .WithMany()
                        .HasForeignKey("payment_methodid");

                    b.HasOne("WebKeyGenerator.Models.Payment.Recipient", "recipient")
                        .WithMany()
                        .HasForeignKey("recipientid");

                    b.HasOne("WebKeyGenerator.Models.Payment.RefundedAmount", "refunded_amount")
                        .WithMany()
                        .HasForeignKey("refunded_amountid");

                    b.Navigation("amount");

                    b.Navigation("authorization_details");

                    b.Navigation("cancellation_details");

                    b.Navigation("income_amount");

                    b.Navigation("metadata");

                    b.Navigation("payment_method");

                    b.Navigation("recipient");

                    b.Navigation("refunded_amount");
                });

            modelBuilder.Entity("WebKeyGenerator.Models.Payment.PaymentMethod", b =>
                {
                    b.HasOne("WebKeyGenerator.Models.Payment.Card", "card")
                        .WithMany()
                        .HasForeignKey("cardid");

                    b.Navigation("card");
                });

            modelBuilder.Entity("WebKeyGenerator.Models.Buisness.Client", b =>
                {
                    b.Navigation("Keys");
                });

            modelBuilder.Entity("WebKeyGenerator.Models.Identity.User", b =>
                {
                    b.Navigation("RefreshTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
